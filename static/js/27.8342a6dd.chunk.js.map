{"version":3,"sources":["components/Typography.js","components/Page.js","components/HorizontalLabelPositionBelowStepper.js","pages/NewUseCasePage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","Tag","tag","className","type","restProps","classes","classNames","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","length","map","index","name","active","key","useStyles","makeStyles","theme","root","width","backButton","marginRight","spacing","instructions","marginTop","marginBottom","HorizontalLabelPositionBelowStepper","React","useState","activeStep","setActiveStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","Button","onClick","stepIndex","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","FormGroup","Label","for","id","getStepContent","disabled","prevActiveStep","variant","color","NewUseCasePage","state","redirect","setRedirect","setState","renderRedirect","to","window","scrollTo","Row","Col","Card","CardHeader","CardBody","Form","Component"],"mappings":"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","file":"static/js/27.8342a6dd.chunk.js","sourcesContent":["import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input,\r\nLabel, FormGroup} from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Name', 'Department', 'Data Load', 'Quality Control', 'Data Analysis'\r\n  , 'Model', 'Evaluation'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return (<InputGroup>\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>Name</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder=\"Create Use Case Name...\" />\r\n      </InputGroup>\r\n      );\r\n    case 1:\r\n      return (\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Select Department</Label>\r\n          <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n            <option></option>\r\n            <option>Safety</option>\r\n            <option>Flight Operations</option>\r\n            <option>ME</option>\r\n          </Input>\r\n        </FormGroup>\r\n      );\r\n    case 2:\r\n      return (\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Select Data Load Connection</Label>\r\n          <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n            <option></option>\r\n            <option>load1</option>\r\n            <option>load2</option>\r\n            <option>load3</option>\r\n          </Input>\r\n        </FormGroup>\r\n      );\r\n    case 3:\r\n      return (\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Quality Control Rule</Label>\r\n          <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n            <option></option>\r\n            <option>Rule1</option>\r\n            <option>Rule2</option>\r\n            <option>Rule3</option>\r\n          </Input>\r\n          <Label for=\"exampleSelect\">Quality Control Format</Label>\r\n          <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n            <option></option>\r\n            <option>Format1</option>\r\n            <option>Format2</option>\r\n            <option>Format3</option>\r\n          </Input>\r\n        </FormGroup>\r\n      );\r\n    case 4:\r\n      return (\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Select Data Analysis Format</Label>\r\n          <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n            <option></option>\r\n            <option>Format1</option>\r\n            <option>Format2</option>\r\n            <option>Format3</option>\r\n          </Input>\r\n        </FormGroup>\r\n      );\r\n    case 5:\r\n      return (\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Select Model</Label>\r\n          <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n            <option></option>\r\n            <option>Model1</option>\r\n            <option>Model2</option>\r\n            <option>Model3</option>\r\n          </Input>\r\n          <Label for=\"exampleSelect\">Select Model Process</Label>\r\n          <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n            <option></option>\r\n            <option>Process1</option>\r\n            <option>Process2</option>\r\n            <option>Process3</option>\r\n          </Input>\r\n        </FormGroup>\r\n      );\r\n    case 6:\r\n      return (\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Select Evaluation Format</Label>\r\n          <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n            <option></option>\r\n            <option>Format1</option>\r\n            <option>Format2</option>\r\n            <option>Format3</option>\r\n          </Input>\r\n        </FormGroup>\r\n      );\r\n    default:\r\n      return 'Unknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map(label => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>All steps completed</Typography>\r\n            <Button onClick={handleReset}>Return</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Page from 'components/Page';\r\n// import {FormPageCSV} from './FormPageCSV'\r\nimport React from 'react';\r\nimport {\r\n  Card, CardBody, CardHeader, Col, Form, Row\r\n} from 'reactstrap';\r\nimport {Redirect } from 'react-router-dom';\r\nimport HorizontalLabelPositionBelowStepper from 'components/HorizontalLabelPositionBelowStepper';\r\n\r\nclass NewUseCasePage extends React.Component {\r\n  componentDidMount() {\r\n    // this is needed, because InfiniteCalendar forces window scroll\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  state = {\r\n    redirect: false\r\n  }\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to='/CreateUseCasePage' />\r\n    }\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <Page title=\"Create New Use Case\" breadcrumbs={[{ name: 'Create Use Case / Create New Use Case', active: true }]}>\r\n      <Row>\r\n        <Col>\r\n          <Card className=\"mb-3\">\r\n            <CardHeader>Use Case Fields</CardHeader>\r\n              <CardBody>\r\n              <Form>\r\n                <HorizontalLabelPositionBelowStepper/>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Card className=\"mb-3\">\r\n            <CardHeader>View Current Selections</CardHeader>\r\n              <CardBody>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Page>\r\n  );\r\n}\r\n}\r\n\r\nexport default NewUseCasePage;\r\n"],"sourceRoot":""}