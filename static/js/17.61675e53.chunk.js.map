{"version":3,"sources":["components/Typography.js","components/Page.js","components/JupViewer.js","components/notebooks/Code_Output.ipynb","components/Editor.js","components/notebooks/Code.txt","components/ModalDataAnalysisBuild.js","components/MenuDataAnalysisBuild.js","components/test-hook.jsx","components/AddRemoveLayout.jsx","pages/DataAnalysisBuildPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","Tag","tag","className","type","restProps","classes","classNames","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","length","map","index","name","active","key","JupViewer","require","Card","Meta","state","fpath","fbase_path","ed_theme","text_ed_theme","background_theme","background_text_theme","background_input_theme","background_output_theme","loading","notebook_json","placeholder_component","gutterVisible","str","RegExp","test","this","props","file","fbase","split","pop","setState","join","fetch","then","r","text","a","JSON","parse","console","log","error","alert","source","cell_content","code","rgx","new_source","old_source","match","validURL","replace","rgx2","s2","outputs","text_plain","stdout","errors","img_data","stdout_found","text_found","error_found","img_found","lines_stdout","lines_text_plain","lines_error_trace","outs","style","padding","display","readOnly","placeholder","mode","theme","maxWidth","margin","width","maxLines","fontSize","showPrintMargin","showGutter","highlightActiveLine","value","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","src","backgroundColor","color","ev","spinning","item","bodyStyle","border","span","Text","float","textAlign","praseOutputs","React","Component","module","exports","ipynb","Editor","downloadTxtFile","newCode","element","document","createElement","Blob","href","URL","createObjectURL","download","body","appendChild","click","showComponent","_onButtonClick","bind","onChange","textCode","response","data","newValue","Infinity","editorProps","$blockScrolling","onClick","ModalDataAnalysisBuild","buttonLabel","useState","modal","setModal","toggle","setBackdrop","Label","Modal","isOpen","ModalHeader","ModalBody","Form","inline","onSubmit","preventDefault","FormGroup","for","Input","id","target","InputGroup","InputGroupAddon","addonType","InputGroupText","ModalFooter","Button","MenuDataAnalysisBuild","editButton","deleteButton","codeEditor","anchorEl","setAnchorEl","open","Boolean","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","onClose","PaperProps","maxHeight","ITEM_HEIGHT","MenuItem","selected","window","ResponsiveReactGridLayout","WidthProvider","Responsive","AddRemoveLayout","items","i","list","toString","x","y","w","h","add","newCounter","onAddItem","onLayoutChange","onBreakpointChange","el","data-grid","position","right","top","cursor","onRemoveItem","concat","cols","breakpoint","layout","_","reject","outline","PureComponent","lg","md","sm","xs","xxs","rowHeight","DataAnalysisBuildPage","Row","Col","xl"],"mappings":"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","file":"static/js/17.61675e53.chunk.js","sourcesContent":["import classNames from 'classnames';\r\nimport React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nconst tagMap = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n  'display-1': 'h1',\r\n  'display-2': 'h1',\r\n  'display-3': 'h1',\r\n  'display-4': 'h1',\r\n  p: 'p',\r\n  lead: 'p',\r\n  blockquote: 'blockquote',\r\n};\r\n\r\nconst types = Object.keys(tagMap);\r\n\r\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\r\n  const classes = classNames({ [type]: !!type }, className);\r\n  let TypoComp;\r\n\r\n  if (Tag) {\r\n    TypoComp = Tag;\r\n  } else if (!Tag && tagMap[type]) {\r\n    TypoComp = tagMap[type];\r\n  } else {\r\n    TypoComp = 'p';\r\n  }\r\n\r\n  return <TypoComp {...restProps} className={classes} />;\r\n};\r\n\r\nTypography.propTypes = {\r\n  tag: PropTypes.component,\r\n  className: PropTypes.string,\r\n  type: PropTypes.oneOf(types),\r\n};\r\n\r\nTypography.defaultProps = {\r\n  type: 'p',\r\n};\r\n\r\nexport default Typography;\r\n","import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <Tag className={classes} {...restProps}>\r\n      <div className={bem.e('header')}>\r\n        {title && typeof title === 'string' ? (\r\n          <Typography type=\"h1\" className={bem.e('title')}>\r\n            {title}\r\n          </Typography>\r\n        ) : (\r\n            title\r\n          )}\r\n        {breadcrumbs && (\r\n          <Breadcrumb className={bem.e('breadcrumb')}>\r\n            <BreadcrumbItem>Home</BreadcrumbItem>\r\n            {breadcrumbs.length &&\r\n              breadcrumbs.map(({ name, active }, index) => (\r\n                <BreadcrumbItem key={index} active={active}>\r\n                  {name}\r\n                </BreadcrumbItem>\r\n              ))}\r\n          </Breadcrumb>\r\n        )}\r\n      </div>\r\n      {children}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    })\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\nimport {\n    Card, Spin,\n    Tag, Col, Row, Typography,\n    Switch\n} from 'antd';\nimport { render } from \"react-dom\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-kuroir\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport './App.css';\n\nconst ReactMarkdown = require('react-markdown')\nconst { Meta } = Card;\n\nclass JupViewer extends React.Component {\n    state = {\n        //file_path\n        fpath: \"\",\n        fbase_path: \"\",\n        // Editor Theme\n        ed_theme: 'darkTheme',\n        text_ed_theme: 'tomorrow',\n        //themes:\n        background_theme: \"white\",\n        background_text_theme: 'white',\n        // background_input_theme: '#2F3129',\n        background_input_theme: 'white',\n        background_output_theme: 'white',\n        loading: true,\n        notebook_json: null,\n        placeholder_component: \"Loading....\",\n\n        // Gutter\n        gutterVisible: false\n    }\n\n    validURL(str) {\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n        return !!pattern.test(str);\n    }\n\n    async componentDidMount() {\n        if (!!this.props.file) {\n            var fbase = this.props.file.split('/');\n            fbase.pop();\n            this.setState({\n                fpath: this.props.file,\n                fbase_path: fbase.join('/') + '/'\n            })\n            await fetch(this.props.file)\n                .then((r) => r.text())\n                .then(async (text) => {\n                    try {\n                        var notebook_json = JSON.parse(text)\n                        this.setState({\n                            notebook_json: notebook_json,\n                            loading: false,\n                            placeholder_component: 'Notebook loaded'\n                        })\n                        console.log(this.state.notebook_json)\n                    } catch (error) {\n                        alert('OOps! Unable to load json')\n                        this.setState({\n                            notebook_json: { \"message\": \"Unable to parse .ipynb file\" },\n                            loading: false,\n                            placeholder_component: 'Oops! We have problem opening the notebook'\n                        })\n                    }\n                })\n        }\n    }\n\n    praseSource(source) {\n        var cell_content = ``\n        for (var code in source) {\n            cell_content += source[code]\n        }\n        return cell_content\n    }\n\n    parseMD(source) {\n        var cell_content = ``\n        for (var code in source) {\n            var rgx = new RegExp(/src=\"(.*?)\"/)\n            var new_source = source[code]\n            var old_source = source[code].match(rgx)\n            if (!!old_source && !this.validURL(old_source[1])) {\n                new_source = source[code].replace(/src=\"(.*?)\"/, 'src=\"' + this.state.fbase_path + old_source[1] + '\"')\n                // console.log(new_source)\n            } else {\n                var rgx2 = new RegExp(/\\!\\[(.*?)\\]\\((.*?)[\\s|\\)]/)\n                var s2 = source[code].match(rgx2)\n                if (!!s2 && !this.validURL(s2[2])) {\n                    // console.log(s2[2])\n                    // console.log(this.validURL(s2[2]))\n                    // console.log(new_source.replace(s2[2], this.state.fbase_path + s2[2]))\n                    new_source = new_source.replace(s2[2], this.state.fbase_path + s2[2])\n                }\n            }\n            // \n            cell_content += new_source\n        }\n        return cell_content\n    }\n\n    praseOutputs(outputs) {\n        if (outputs.length == 0) {\n            return \"\"\n        }\n        // Handle \"data\" type cells\n        var text_plain = ``\n        var stdout = ``\n        var errors = ``\n        var img_data = `data:image/png;base64,`\n\n        //booleans\n        var stdout_found = false\n        var text_found = false\n        var error_found = false\n        var img_found = false\n\n        //maxlines for each output type\n        var lines_stdout = 3\n        var lines_text_plain = 3\n        var lines_error_trace = 3\n        for (var outs in outputs) {\n            if (\"data\" in outputs[outs]) {\n\n                if (\"text/plain\" in outputs[outs][\"data\"]) {\n                    for (var text in outputs[outs]['data']['text/plain']) {\n                        text_plain += outputs[outs]['data']['text/plain'][text]\n                    }\n                    text_found = true\n                    lines_text_plain = outputs[outs][\"data\"][\"text/plain\"].length\n                }\n                if (\"image/png\" in outputs[outs][\"data\"]) {\n                    img_data += outputs[outs][\"data\"][\"image/png\"]\n                    img_found = true\n                }\n            }\n            if (\"name\" in outputs[outs]) {\n                for (var text in outputs[outs][\"text\"]) {\n                    stdout += outputs[outs][\"text\"][text]\n                }\n                stdout_found = true\n                lines_stdout = outputs[outs][\"text\"].length\n            }\n            // Check for errors\n            if (\"ename\" in outputs[outs]) {\n                errors += outputs[outs]['ename'] + \"\\n\" + outputs[outs][\"evalue\"] + \"\\n\"\n                // for (var trace in outputs[outs][\"traceback\"]) {\n                //     errors += outputs[outs][\"traceback\"][trace]\n                // }\n                error_found = true\n                lines_error_trace = outputs[outs][\"traceback\"].length\n            }\n        }\n\n        var return_template = (\n            <div>\n                <div style={{\n                    padding: '5px 3px',\n                    display: stdout_found ? '' : 'none'\n                }}>\n                    {/* <Tag color=\"#2db7f5\"\n                    >stdout</Tag><br></br> */}\n                    <AceEditor\n                        readOnly\n                        placeholder=\"--\"\n                        mode=\"markdown\"\n                        theme={this.state.text_ed_theme}\n                        name=\"stdout\"\n                        style={{\n                            maxWidth: '700px',\n                            padding: '10px',\n                            margin: '10px 0px'\n                        }}\n                        width=\"100%\"\n                        maxLines={lines_stdout + 1}\n                        fontSize={14}\n                        showPrintMargin={false}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        value={stdout}\n                        setOptions={{\n                            enableBasicAutocompletion: false,\n                            enableLiveAutocompletion: false,\n                            enableSnippets: false,\n                            showLineNumbers: false,\n                            tabSize: 2,\n                        }} /></div>\n                <div style={{ padding: '5px 3px', display: text_found ? '' : 'none' }}>\n                    {/* <Tag color=\"#87d068\"\n                    >data:text/plain</Tag><br></br> */}\n                    <AceEditor\n                        readOnly\n                        placeholder=\"--\"\n                        mode=\"markdown\"\n                        theme={this.state.text_ed_theme}\n                        name=\"text\"\n                        style={{\n                            maxWidth: '700px',\n                            padding: '10px',\n                            margin: '10px 0px'\n                        }}\n                        width=\"100%\"\n                        maxLines={lines_text_plain}\n                        fontSize={14}\n                        showPrintMargin={false}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        value={text_plain}\n                        setOptions={{\n                            enableBasicAutocompletion: false,\n                            enableLiveAutocompletion: false,\n                            enableSnippets: false,\n                            showLineNumbers: false,\n                            tabSize: 2,\n                        }} /></div>\n                <div style={{ display: img_found ? '' : 'none' }}>\n                    {/* <Tag color=\"#87d068\"\n                    >data:image/png</Tag><br></br> */}\n                    <img\n                        src={img_data}\n                        style={{\n                            display: img_found ? '' : 'none',\n                            width: '100%',\n                            backgroundColor: 'white'\n                        }} />\n                </div>\n                <div style={{ padding: '5px 3px', display: error_found ? '' : 'none' }}>\n                    <Tag color=\"#f50\"\n                    >error</Tag><br></br>\n                    <AceEditor\n                        readOnly\n                        placeholder=\"--\"\n                        mode=\"markdown\"\n                        theme={this.state.text_ed_theme}\n                        name=\"error\"\n                        style={{\n                            maxWidth: '700px',\n                            padding: '10px',\n                            margin: '10px 0px'\n                        }}\n                        width=\"100%\"\n                        maxLines={lines_error_trace}\n                        fontSize={14}\n                        showPrintMargin={false}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        value={errors}\n                        setOptions={{\n                            enableBasicAutocompletion: false,\n                            enableLiveAutocompletion: false,\n                            enableSnippets: false,\n                            showLineNumbers: false,\n                            tabSize: 2,\n                        }} /></div>\n            </div>\n        )\n\n\n        return return_template\n    }\n\n\n    themeChanger(ev) {\n        if (ev) {\n            this.setState({\n                // Editor Theme\n                ed_theme: 'darkTheme',\n                text_ed_theme: 'tomorrow',\n                //themes:\n                background_theme: \"black\",\n                background_text_theme: 'white',\n                // background_input_theme: '#2F3129',\n                background_input_theme: '#272822',\n                background_output_theme: '#2F3129',\n            })\n        }\n        else {\n            this.setState({\n                // Editor Theme\n                ed_theme: 'lightTheme',\n                text_ed_theme: 'kuroir',\n                //themes:\n                background_theme: \"white\",\n                background_text_theme: 'black',\n                // background_input_theme: '#2F3129',\n                background_input_theme: '#E8E9E8',\n                background_output_theme: '#F1F1F2',\n            })\n        }\n        console.log(`switch to ${ev}`);\n    }\n\n    gutterChanger(ev) {\n        if (ev) {\n            this.setState({\n                gutterVisible: true\n            })\n        }\n        else {\n            this.setState({\n                gutterVisible: false\n            })\n        }\n    }\n\n    render() {\n        console.log(this.props.file)\n        return (\n            <div>\n                <br></br>\n                <Spin spinning={this.state.loading} >\n                    <center>\n                        {/* This is where the blog metadata and the cover will go */}\n                        {/* <div class={this.state.ed_theme}>\n                            <Card\n                                bodyStyle={{\n                                    padding: '30px 10px',\n                                    backgroundColor: this.state.background_output_theme,\n                                }}\n                                style={{\n                                    width: '100%',\n                                    maxWidth: '800px',\n                                    border: 'none'\n                                }}\n                            > */}\n                                {/* <Row>\n                                    <Col span={1}></Col>\n                                    <Col span={22}>\n                                        <Typography.Title strong style={{\n                                            color: this.state.background_text_theme,\n                                            // fontSize: '50px',\n                                            wordWrap: 'break-word',\n                                            width: '100%',\n                                        }}>{this.props.title}</Typography.Title>\n                                        <Typography.Title\n                                            level={4} style={{\n                                                color: this.state.background_text_theme,\n                                                wordWrap: 'break-word',\n                                                width: '100%',\n                                                display: !!this.props.subtitle ? '' : 'none'\n                                            }}>{this.props.subtitle}</Typography.Title>\n                                    </Col>\n                                    <Col span={1}></Col>\n                                </Row> */}\n\n                                {/* <Row>\n                                    <Col span={1}></Col>\n                                    <Col span={22}>\n                                        <img\n                                            alt=\"No Cover Image Found\"\n                                            style={{\n                                                display: !!this.props.coverImg ? '' : 'none',\n                                                width: '100%'\n                                            }}\n                                            src={!!this.props.coverImg ? this.props.coverImg : \"http://eskipaper.com/images/simple-silver-wallpaper-1.jpg\"} />\n                                    </Col>\n                                    <Col span={1}>\n\n                                    </Col>\n                                </Row>\n\n                                <br></br>\n                                <br></br> */}\n                                {/* <Row>\n                                    <Col span={1}></Col>\n                                    <Col span={20}>\n                                        <Tag color=\"blue\" style={{ float: 'left' }}>{this.state.loading ? \"Unknown\" : this.state.notebook_json['metadata']['kernelspec']['display_name']}</Tag>\n                                        <Switch\n                                            style={{\n                                                margin: '0px 5px'\n                                            }}\n                                            defaultChecked checkedChildren=\"dark theme\" unCheckedChildren=\"light theme\"\n                                            onChange={this.themeChanger.bind(this)}\n                                        />\n                                        <Switch\n                                            style={{\n                                                margin: '0px 5px'\n                                            }}\n                                            checkedChildren=\"gutter visilbe\" unCheckedChildren=\"gutter hidden\"\n                                            onChange={this.gutterChanger.bind(this)} />\n                                    </Col>\n                                    <Col span={1}></Col>\n                                </Row> */}\n                            {/* </Card>\n                        </div> */}\n                        {\n                            this.state.loading ? <div></div> : (this.state.notebook_json['cells'].map(item => (\n                                <Card\n                                    bodyStyle={{\n                                        padding: '0px 10px',\n                                        backgroundColor: this.state.background_output_theme\n                                    }}\n                                    style={{\n                                        width: '100%',\n                                        maxWidth: '800px',\n                                        border: 'none'\n                                    }}\n                                >\n\n                                    {/* <Row\n                                        style={{\n                                            backgroundColor: this.state.background_output_theme\n                                        }}\n                                    >\n                                        <Col span={this.state.gutterVisible ? 3 : 1}>\n                                            <div\n                                                style={{\n                                                    display: this.state.gutterVisible ? '' : 'none'\n                                                }}\n                                            >\n                                                <Typography.Text\n                                                    style={{\n                                                        color: this.state.background_text_theme,\n                                                        float: 'left',\n                                                        padding: '5px',\n                                                        color: '#56ACBC',\n                                                        display: item['cell_type'] == \"code\" ? '' : 'none',\n                                                    }}>\n                                                    I [ {item['execution_count']} ]:\n                                            </Typography.Text>\n\n                                            </div>\n                                        </Col>\n\n                                        <Col span={this.state.gutterVisible ? 20 : 22}\n                                            style={{\n                                                textAlign: 'left'\n                                            }}\n                                        >\n\n                                            {item['cell_type'] == \"code\" ? (\n                                                <div\n                                                    style={{\n                                                        padding: '5px 0px',\n                                                        borderStyle: 'solid',\n                                                        borderWidth: '1px',\n                                                        backgroundColor: this.state.background_input_theme\n                                                    }}>\n                                                    <AceEditor\n                                                        readOnly\n                                                        placeholder=\"---\"\n                                                        mode=\"python\"\n                                                        theme={this.state.text_ed_theme}\n                                                        name=\"code\"\n                                                        style={{\n                                                            maxWidth: '700px',\n                                                            padding: '10px',\n                                                            margin: '10px 0px'\n                                                        }}\n                                                        width=\"100%\"\n                                                        maxLines={item['source'].length == 0 ? 1 : item['source'].length + 1}\n                                                        onLoad={this.onLoad}\n                                                        onChange={this.onChange}\n                                                        fontSize={14}\n                                                        showGutter={true}\n                                                        highlightActiveLine={true}\n                                                        value={this.praseSource(item['source'])}\n                                                        setOptions={{\n                                                            enableBasicAutocompletion: false,\n                                                            enableLiveAutocompletion: false,\n                                                            enableSnippets: false,\n                                                            showLineNumbers: true,\n                                                            tabSize: 2,\n                                                        }} />\n                                                </div>\n                                            ) :\n\n                                                <div class=\"MDImg\">\n                                                    <div\n                                                        class={this.state.ed_theme}\n                                                        style={{\n                                                            margin: '0px 0px',\n                                                            padding: '10px',\n                                                            // border:'solid',\n                                                            // borderWidth:'1px'\n                                                        }}\n                                                    >\n                                                        <ReactMarkdown\n                                                            style={{\n                                                                float: 'left'\n                                                            }}\n                                                            source={this.parseMD(item['source'])}\n                                                            escapeHtml={false}\n                                                        />\n                                                    </div>\n                                                </div>}\n                                        </Col>\n                                        <Col span={1}></Col>\n                                    </Row> */}\n\n                                    {\n                                        item['cell_type'] == 'markdown' ? <div></div> :\n                                            (\n                                                <Row\n                                                    style={{\n                                                        display: !!item['outputs'].length == 0 ? 'none' : 'visible',\n                                                        backgroundColor: this.state.background_output_theme\n                                                    }}>\n\n                                                    <Col span={this.state.gutterVisible ? 3 : 1}>\n                                                        <Typography.Text\n                                                            style={{\n                                                                display: this.state.gutterVisible ? '' : 'none',\n                                                                color: this.state.background_text_theme,\n                                                                float: 'left',\n                                                                padding: '5px',\n                                                                color: '#E5496A'\n                                                            }}>\n                                                            O [ {item['execution_count']} ]:\n                                                        </Typography.Text>\n                                                    </Col>\n                                                    <Col span={this.state.gutterVisible ? 20 : 22}\n                                                        style={{\n                                                            textAlign: 'left',\n                                                            color: 'white'\n                                                        }}>\n                                                        {this.praseOutputs(item['outputs'])}\n                                                    </Col>\n                                                    <Col span={1}></Col>\n                                                </Row>\n                                            )\n                                    }\n                                </Card>\n                            )))\n                        }\n                    </center>\n                </Spin>\n                <br></br>\n            </div>\n        )\n    }\n}\n\n\nexport default JupViewer;\n","module.exports = __webpack_public_path__ + \"static/media/Code_Output.1932a9cc.ipynb\";","import React from 'react';\r\nimport AceEditor from \"react-ace\";\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport JupViewer from 'components/JupViewer.js'\r\nimport textCode from 'components/notebooks/Code.txt'\r\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/snippets/python\";\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\n\r\n\r\nconst ipynb = require('components/notebooks/Code_Output.ipynb')\r\n\r\nclass Editor extends React.Component {\r\n\r\n  componentDidMount () {\r\n    fetch(textCode)\r\n    .then(response => response.text())\r\n    .then((data) => {\r\n        this.setState({\r\n        code: data})  \r\n    })\r\n }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showComponent: false,\r\n      code: \"\",\r\n      newCode: \"\",\r\n    };\r\n    this._onButtonClick = this._onButtonClick.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  _onButtonClick() {\r\n    \r\n    this.setState({\r\n      showComponent: true,\r\n    });\r\n  }\r\n\r\n  onChange(newValue) {\r\n    console.log(\"change\", newValue);\r\n    this.state.newCode = newValue;\r\n}\r\n\r\ndownloadTxtFile = () => {\r\n  console.log(\"saveCode\", this.state.newCode);\r\n  const element = document.createElement(\"a\");\r\n  const file = new Blob([this.state.newCode], {type: 'text/plain'});\r\n  element.href = URL.createObjectURL(file);\r\n  element.download = \"Code.txt\";\r\n  document.body.appendChild(element); // Required for this to work in FireFox\r\n  element.click();\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n      <AceEditor\r\n      mode=\"python\"\r\n      theme=\"tomorrow\"\r\n      width=\"inherit\"\r\n      maxLines={Infinity}\r\n      onChange={this.onChange}\r\n      name=\"UNIQUE_ID_OF_DIV\"\r\n      value={this.state.code}\r\n      editorProps={{ $blockScrolling: true }}\r\n      enableBasicAutocompletion={true}\r\n      enableLiveAutocompletion={true}\r\n      enableSnippets={true}\r\n    />\r\n    <br/>\r\n    <PlayCircleOutlineIcon color=\"primary\" onClick={this._onButtonClick}/>\r\n    <SaveIcon color=\"primary\" onClick={this.downloadTxtFile}/>\r\n    {this.state.showComponent ? <JupViewer file={ipynb}/> :null}\r\n  </div>\r\n  );\r\n};\r\n};\r\n\r\nexport default Editor;\r\n","module.exports = __webpack_public_path__ + \"static/media/Code.84e5c389.txt\";","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter,\r\n        Form, Input, Label, FormGroup,InputGroup, InputGroupAddon, InputGroupText} from 'reactstrap';\r\nimport Editor from 'components/Editor.js'\r\n\r\nconst ModalDataAnalysisBuild = (props) => {\r\n  const {\r\n    buttonLabel,\r\n    className,\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const [setBackdrop] = useState(true);\r\n\r\n    const changeBackdrop = e => {\r\n      let value = e.target.value;\r\n      if (value !== '') {\r\n        value = JSON.parse(value);\r\n      }\r\n      setBackdrop(value);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <Label onClick={toggle}>{buttonLabel}</Label>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Edit Code</ModalHeader>\r\n        <ModalBody>\r\n            <Form>\r\n                <Form inline onSubmit={(e) => e.preventDefault()}>\r\n                    <FormGroup>\r\n                        <Label for=\"backdrop\">Load Code</Label>{' '}\r\n                        <Input type=\"select\" name=\"backdrop\" id=\"backdrop\" onChange={changeBackdrop}>\r\n                        <option></option>\r\n                        <option>Load 1</option>\r\n                        <option>Load 2</option>\r\n                        <option>Load 3</option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    \r\n                </Form>\r\n                <br/>\r\n                    <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>Name</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input />\r\n                    </InputGroup>\r\n            </Form>\r\n            \r\n            <br/>\r\n            <Editor/>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>Submit</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDataAnalysisBuild;","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ModalDataAnalysisBuild from 'components/ModalDataAnalysisBuild';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function MenuDataAnalysisBuild(props) {\r\n  const {\r\n    editButton,\r\n    deleteButton,\r\n    codeEditor,\r\n  } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200,\r\n          },\r\n        }}\r\n      >\r\n          <MenuItem selected={'Edit Code'} >\r\n            <ModalDataAnalysisBuild buttonLabel={\"Edit Code\"}/>\r\n          </MenuItem>\r\n          <MenuItem selected={'Delete'} onClick={deleteButton}>Delete</MenuItem>\r\n          \r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/styles.css\";\r\nimport \"./examples/example-styles.css\";\r\ntypeof window !== \"undefined\" && (window.React = React); // for devtools\r\n\r\nexport default function makeLayout(Layout) {\r\n  // Basic layout that mirrors the internals of its child layout by listening to `onLayoutChange`.\r\n  // It does not pass any other props to the Layout.\r\n  class ListeningLayout extends React.Component {\r\n    state = { layout: [] };\r\n\r\n    onLayoutChange = layout => {\r\n      this.setState({ layout: layout });\r\n    };\r\n\r\n    stringifyLayout() {\r\n      return this.state.layout.map(function(l) {\r\n        const name = l.i === \"__dropping-elem__\" ? \"drop\" : l.i;\r\n        return (\r\n          <div className=\"layoutItem\" key={l.i}>\r\n            <b>{name}</b>\r\n            {`: [${l.x}, ${l.y}, ${l.w}, ${l.h}]`}\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"layoutJSON\">\r\n            Displayed as <code>[x, y, w, h]</code>:\r\n            <div className=\"columns\">{this.stringifyLayout()}</div>\r\n          </div>\r\n          <Layout onLayoutChange={this.onLayoutChange} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function run() {\r\n    const contentDiv = document.getElementById(\"content\");\r\n    const gridProps = window.gridProps || {};\r\n    ReactDOM.render(React.createElement(ListeningLayout, gridProps), contentDiv);\r\n  }\r\n  if (!document.getElementById(\"content\")) {\r\n    document.addEventListener(\"DOMContentLoaded\", run);\r\n  } else {\r\n    run();\r\n  }\r\n\r\n  return ListeningLayout;\r\n}","import React from \"react\";\r\nimport { Card, CardBody, Col,  Row,\r\n  Button\r\n  } from 'reactstrap';\r\nimport MenuDataAnalysisBuild from 'components/MenuDataAnalysisBuild';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\r\nimport _ from \"lodash\";\r\nimport \"components/test-hook.jsx\"\r\nimport JupViewer from 'components/JupViewer.js'\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\nconst ipynb = require('components/notebooks/Code_Output.ipynb')\r\n\r\n/**\r\n * This layout demonstrates how to use a grid with a dynamic number of elements.\r\n */\r\nexport default class AddRemoveLayout extends React.PureComponent {\r\n  static defaultProps = {\r\n    className: \"layout\",\r\n    cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\r\n    rowHeight: 100\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: [].map(function(i, key, list) {\r\n        return {\r\n          i: i.toString(),\r\n          x: i * 2,\r\n          y: 0,\r\n          w: 2,\r\n          h: 2,\r\n          add: i === (list.length - 1)\r\n        };\r\n      }),\r\n      newCounter: 0,\r\n    };\r\n\r\n    this.onAddItem = this.onAddItem.bind(this);\r\n    this.onLayoutChange = this.onLayoutChange.bind(this);\r\n    this.onBreakpointChange = this.onBreakpointChange.bind(this);\r\n  }\r\n\r\n  createElement(el) {\r\n    const removeStyle = {\r\n      position: \"absolute\",\r\n      right: \"2px\",\r\n      top: 0,\r\n      cursor: \"pointer\"\r\n    };\r\n    const i = el.add ? \"+\" : el.i;\r\n    \r\n    return (\r\n      <Card key={i} data-grid={el}>\r\n        {el.add ? (\r\n          <span\r\n            className=\"add text\"\r\n            onClick={this.onAddItem}\r\n            title=\"Add item by clicking here\"\r\n          >\r\n            Add +\r\n          </span>\r\n        ) : (\r\n        <span className=\"text\"></span>\r\n        )}\r\n        <span\r\n          className=\"remove\"\r\n          style={removeStyle}\r\n        >\r\n          <MenuDataAnalysisBuild deleteButton = {this.onRemoveItem.bind(this, i)}/>\r\n\r\n        </span>\r\n        <br/>\r\n        <span>\r\n          <JupViewer file={ipynb}/>\r\n        </span>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  onAddItem() {\r\n    /*eslint no-console: 0*/\r\n    console.log(\"adding\", \"item \" + this.state.newCounter);\r\n    this.setState({\r\n      // Add a new item. It must have a unique key!\r\n      items: this.state.items.concat({\r\n        i: \"\" + this.state.newCounter,\r\n        x: (this.state.items.length * 2) % (this.state.cols || 12),\r\n        y: Infinity, // puts it at the bottom\r\n        w: 2,\r\n        h: 100 % (this.state.cols || 12),\r\n      }),\r\n      // Increment the counter to ensure key is always unique.\r\n      newCounter: this.state.newCounter + 1\r\n    });\r\n  }\r\n\r\n  // We're using the cols coming back from this to calculate where to add new items.\r\n  onBreakpointChange(breakpoint, cols) {\r\n    this.setState({\r\n      breakpoint: breakpoint,\r\n      cols: cols\r\n    });\r\n  }\r\n\r\n  onLayoutChange(layout) {\r\n    // this.props.onLayoutChange(layout); // for some reason https://github.com/STRML/react-grid-layout/issues/726\r\n    this.setState({ layout: layout });\r\n  }\r\n\r\n  onRemoveItem(i) {\r\n    console.log(\"removing\", i);\r\n    this.setState({ items: _.reject(this.state.items, { i: i }) });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <button onClick={this.onAddItem}>Add Item</button> */}\r\n        <AddCircleIcon fontSize=\"large\" outline color=\"primary\" onClick={this.onAddItem}>Add Item</AddCircleIcon>\r\n        <ResponsiveReactGridLayout\r\n          onLayoutChange={this.onLayoutChange}\r\n          onBreakpointChange={this.onBreakpointChange}\r\n          {...this.props}\r\n        >\r\n          {_.map(this.state.items, el => this.createElement(el))}\r\n        </ResponsiveReactGridLayout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Page from 'components/Page';\r\nimport React from 'react';\r\nimport {\r\n  Card, CardBody, CardHeader, Col, Row, Table, Button,\r\n} from 'reactstrap';\r\nimport { Responsive, WidthProvider } from 'react-grid-layout';\r\nimport AddRemoveLayout from 'components/AddRemoveLayout.jsx'\r\n\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\n\r\nclass DataAnalysisBuildPage extends React.Component {\r\n\r\n  render() {\r\n\r\n  return (\r\n    <Page title=\"Data Analysis Build\" breadcrumbs={[{ name: 'Data Analysis Build', active: true }]}>\r\n      <Row>\r\n        <Col xl={25} lg={12} md={12}>\r\n          <AddRemoveLayout/>\r\n        </Col>\r\n      </Row>\r\n    </Page>\r\n  );\r\n}\r\n}\r\nexport default DataAnalysisBuildPage;\r\n"],"sourceRoot":""}